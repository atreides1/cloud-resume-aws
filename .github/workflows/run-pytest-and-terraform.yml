name: run-tests
run-name: Run Pytest
on: 
  push:
    paths-ignore:
      - '.github/workflows/*'
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}
jobs:
  run-pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Check out repository code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: pip install pytest pytest-md pytest-emoji boto3 botocore moto
        
      - uses: pavelzw/pytest-action@v2
        with:
          verbose: true
          emoji: true
          job-summary: true
          custom-arguments: '-q'
          click-to-expand: true
          report-title: 'Test Report'
      - run: pytest ./lambda-src/test_visitorCounter_lambda.py
  run-terraform:
    needs: run-pytest
    runs-on: ubuntu-latest
    env:
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
      TF_VAR_bucket_name: ${{ vars.TF_VAR_bucket_name }}
      TF_VAR_cname: ${{ vars.TF_VAR_cname }}
      TF_VAR_domain_name: ${{ vars.TF_VAR_domain_name }}
      TF_VAR_dynamodb_table_name: ${{ vars.TF_VAR_dynamodb_table_name }}
      TF_VAR_region: ${{ vars.TF_VAR_region }}
      TF_VAR_route53_hosting_zone_id: ${{ secrets.ROUTE_53_HOSTING_ZONE_ID }}
    steps:
      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}" 

      - name: Terraform fmt
        run: terraform fmt
        
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply for AWS resources
        run: terraform apply -auto-approve

      - name: Terraform Apply for main.js upload
        run: terraform apply -auto-approve